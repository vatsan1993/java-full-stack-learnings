package com.example.ui;

import java.time.LocalDate;
import java.util.List;
import java.util.Scanner;

import com.example.entity.ContractEmployee;
import com.example.entity.Employee;
import com.example.entity.Manager;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.EntityTransaction;
import jakarta.persistence.Persistence;
import jakarta.persistence.Query;
import jakarta.persistence.TypedQuery;

public class EmployeeApp {
	public static Scanner scanner = new Scanner(System.in);
	public static void main(String[] args) {
//		createEmployees();
//		getEmployee();
//		getMultipleEmployees();
//		getEmployeesWhereClause();
//		getEmployeesWithParameters();
		getEmployees();
		
	}
	
	public static void createEmployees() {
//			persistenceUnitName - mysqlPU
			EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
			EntityManager em = emf.createEntityManager();
			// transaction is better to create transaction if there are multiple insert or update.
			EntityTransaction txn = em.getTransaction();
			// starting transaction
			txn.begin();
			Employee emp = new Employee(101L, "Vansy", "Aripaka", 25000.0, LocalDate.now());
			Manager mgr = new Manager(102L, "Srinu", "Dachepalli", 55000.0, LocalDate.now(), 8525.0);
			ContractEmployee cemp = new ContractEmployee(103L, "Suseela", "Aripaka", 35000.0, LocalDate.now(), 12);
			
			em.persist(emp);
			em.persist(mgr);
			em.persist(cemp);
			txn.commit();
			em.close();
	}
	

	
	public static void getEmployees() {
//		persistenceUnitName - mysqlPU
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
		EntityManager em = emf.createEntityManager();
		
//		gets all the employees, manager, Contract emp
		final String eQry = "SELECT e from Employee e";
//		gets all the  managers
		final String mQry = "SELECT m from Manager m";
//		gets all contract employees
		final String ceQry = "SELECT ce from ContractEmployee ce";
		
		List<Employee> emps = em.createQuery(eQry,Employee.class).getResultList();
//		List<Manager> mgrs = em.createQuery(mQry,Manager.class).getResultList();
//		List<ContractEmployee> cemps = em.createQuery(ceQry,ContractEmployee.class).getResultList();
		for(Employee emp : emps) {
			System.out.println(emp);
		}
//		for(Manager emp : mgrs) {
//			System.out.println(emp);
//		}
//		for(ContractEmployee emp : cemps) {
//			System.out.println(emp);
//		}
		em.close();
	}
	
	public static void getEmployeesWithParameters() {
//		persistenceUnitName - mysqlPU
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
		EntityManager em = emf.createEntityManager();
		
		String qryText = "SELECT e FROM Employee e where e.basic between :limit1 and :limit2";
		TypedQuery<Employee> empQuery = em.createQuery(qryText,Employee.class);
		empQuery.setParameter("limit1", 10000);
		empQuery.setParameter("limit2", 55000);
		
		List<Employee> emps = empQuery.getResultList();
		
		for(Employee emp : emps) {
			System.out.println(emp);
		}
		em.close();
	}
	
	
	public static void getEmployeesWhereClause() {
//		persistenceUnitName - mysqlPU
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
		EntityManager em = emf.createEntityManager();
		
		String qryText = "SELECT e FROM Employee e where e.basic between 10000 and 55000";
		TypedQuery<Employee> empQuery = em.createQuery(qryText,Employee.class);
		
		List<Employee> emps = empQuery.getResultList();
		
		for(Employee emp : emps) {
			System.out.println(emp);
		}
		em.close();
	}
	
	
	public static void getMultipleEmployees() {
//		persistenceUnitName - mysqlPU
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
		EntityManager em = emf.createEntityManager();
		
		String qryText = "SELECT e FROM Employee e";
//		Query empQuery = em.createQuery(qryText);
		TypedQuery<Employee> empQuery = em.createQuery(qryText,Employee.class);
		
		List<Employee> emps = empQuery.getResultList();
		
		for(Employee emp : emps) {
			System.out.println(emp);
		}
		em.close();
	}
	
	
	public static void getEmployee() {
		boolean shallContinue = true;
//		persistenceUnitName - mysqlPU
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("mysqlPU");
		EntityManager em = emf.createEntityManager();
		
		while(shallContinue) {
			System.out.println("Enter employee id:");
			long empId = scanner.nextLong();
			
			Employee emp = em.find(Employee.class, empId);
			if(emp != null) {
				System.out.println(emp.getFirstName() + " "+ emp.getLastName());
			}else {
				System.out.println("Emp not Found");
			}
			
			System.out.println("Continue? (true/false): ");
			shallContinue = scanner.nextBoolean();
		}
		
		em.close();
		
	}
	
	
}
